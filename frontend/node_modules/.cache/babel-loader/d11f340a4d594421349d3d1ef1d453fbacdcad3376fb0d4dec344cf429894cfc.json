{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aksha\\\\OneDrive\\\\Documents\\\\Desktop\\\\newprj\\\\frontend\\\\src\\\\pages\\\\OrderPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderPage = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    // ✅ Retrieve orders from local storage\n    const storedOrders = JSON.parse(localStorage.getItem(\"orders\")) || [];\n    setOrders(storedOrders);\n  }, []);\n\n  // ✅ Function to remove a specific order\n  const removeOrder = index => {\n    const updatedOrders = orders.filter((_, i) => i !== index);\n    setOrders(updatedOrders);\n    localStorage.setItem(\"orders\", JSON.stringify(updatedOrders)); // ✅ Update localStorage\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: \"green\"\n      },\n      children: \"\\u2705 Order Confirmed!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), \" \", orders.length > 0 ? orders.map((product, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\",\n        borderBottom: \"1px solid #ddd\",\n        paddingBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: product.image,\n        alt: product.name,\n        width: \"200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price: \\u20B9\", product.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeOrder(index),\n        style: {\n          padding: \"8px 16px\",\n          backgroundColor: \"red\",\n          color: \"white\",\n          border: \"none\",\n          cursor: \"pointer\",\n          fontSize: \"14px\",\n          marginTop: \"10px\"\n        },\n        children: \"Remove Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No orders yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(OrderPage, \"FvMuVccH6DXI6fqfhJiN/VsjZaw=\");\n_c = OrderPage;\nexport default OrderPage;\nvar _c;\n$RefreshReg$(_c, \"OrderPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","OrderPage","_s","orders","setOrders","storedOrders","JSON","parse","localStorage","getItem","removeOrder","index","updatedOrders","filter","_","i","setItem","stringify","style","textAlign","marginTop","children","color","fileName","_jsxFileName","lineNumber","columnNumber","length","map","product","marginBottom","borderBottom","paddingBottom","name","src","image","alt","width","price","onClick","padding","backgroundColor","border","cursor","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/aksha/OneDrive/Documents/Desktop/newprj/frontend/src/pages/OrderPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst OrderPage = () => {\r\n    const [orders, setOrders] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // ✅ Retrieve orders from local storage\r\n        const storedOrders = JSON.parse(localStorage.getItem(\"orders\")) || [];\r\n        setOrders(storedOrders);\r\n    }, []);\r\n\r\n    // ✅ Function to remove a specific order\r\n    const removeOrder = (index) => {\r\n        const updatedOrders = orders.filter((_, i) => i !== index);\r\n        setOrders(updatedOrders);\r\n        localStorage.setItem(\"orders\", JSON.stringify(updatedOrders)); // ✅ Update localStorage\r\n    };\r\n\r\n    return (\r\n        <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n            <h2 style={{ color: \"green\" }}>✅ Order Confirmed!</h2> {/* ✅ Success Message */}\r\n\r\n            {orders.length > 0 ? (\r\n                orders.map((product, index) => (\r\n                    <div key={index} style={{ marginBottom: \"20px\", borderBottom: \"1px solid #ddd\", paddingBottom: \"10px\" }}>\r\n                        <h3>{product.name}</h3>\r\n                        <img src={product.image} alt={product.name} width=\"200\" />\r\n                        <p>Price: ₹{product.price}</p>\r\n\r\n                        {/* ✅ \"Remove Order\" Button for Each Product */}\r\n                        <button \r\n                            onClick={() => removeOrder(index)} \r\n                            style={{\r\n                                padding: \"8px 16px\",\r\n                                backgroundColor: \"red\",\r\n                                color: \"white\",\r\n                                border: \"none\",\r\n                                cursor: \"pointer\",\r\n                                fontSize: \"14px\",\r\n                                marginTop: \"10px\"\r\n                            }}\r\n                        >\r\n                            Remove Order\r\n                        </button>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>No orders yet.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}