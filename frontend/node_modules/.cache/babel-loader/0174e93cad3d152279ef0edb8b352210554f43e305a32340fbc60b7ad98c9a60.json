{"ast":null,"code":"const handleSubmit = async event => {\n  event.preventDefault();\n\n  // ✅ Basic validation\n  if (!name || !pnr || !email || !year || !department || !password) {\n    alert(\"All fields are required!\");\n    return;\n  }\n  const userData = {\n    name,\n    pnr,\n    email,\n    year,\n    department,\n    password\n  };\n  console.log(\"Sending Data:\", userData); // ✅ Debugging step\n\n  try {\n    const response = await fetch(\"http://localhost:5000/api/auth/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    });\n    const data = await response.json();\n    console.log(\"Response Data:\", data);\n    if (!response.ok) {\n      throw new Error(data.error || \"Registration failed!\");\n    }\n    alert(\"✅ Registration Successful!\");\n\n    // ✅ Redirect to login page\n    window.location.href = \"/login\";\n  } catch (error) {\n    console.error(\"Error:\", error.message);\n    alert(`❌ Error: ${error.message}`);\n  }\n};","map":{"version":3,"names":["handleSubmit","event","preventDefault","name","pnr","email","year","department","password","alert","userData","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","error","window","location","href","message"],"sources":["C:/Users/aksha/OneDrive/Documents/Desktop/newprj/frontend/src/pages/Register.js"],"sourcesContent":["const handleSubmit = async (event) => {\r\n  event.preventDefault();\r\n\r\n  // ✅ Basic validation\r\n  if (!name || !pnr || !email || !year || !department || !password) {\r\n    alert(\"All fields are required!\");\r\n    return;\r\n  }\r\n\r\n  const userData = {\r\n    name,\r\n    pnr,\r\n    email,\r\n    year,\r\n    department,\r\n    password,\r\n  };\r\n\r\n  console.log(\"Sending Data:\", userData); // ✅ Debugging step\r\n\r\n  try {\r\n    const response = await fetch(\"http://localhost:5000/api/auth/register\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(userData),\r\n    });\r\n\r\n    const data = await response.json();\r\n    console.log(\"Response Data:\", data);\r\n\r\n    if (!response.ok) {\r\n      throw new Error(data.error || \"Registration failed!\");\r\n    }\r\n\r\n    alert(\"✅ Registration Successful!\");\r\n    \r\n    // ✅ Redirect to login page\r\n    window.location.href = \"/login\";\r\n\r\n  } catch (error) {\r\n    console.error(\"Error:\", error.message);\r\n    alert(`❌ Error: ${error.message}`);\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,KAAK,IAAK;EACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;;EAEtB;EACA,IAAI,CAACC,IAAI,IAAI,CAACC,GAAG,IAAI,CAACC,KAAK,IAAI,CAACC,IAAI,IAAI,CAACC,UAAU,IAAI,CAACC,QAAQ,EAAE;IAChEC,KAAK,CAAC,0BAA0B,CAAC;IACjC;EACF;EAEA,MAAMC,QAAQ,GAAG;IACfP,IAAI;IACJC,GAAG;IACHC,KAAK;IACLC,IAAI;IACJC,UAAU;IACVC;EACF,CAAC;EAEDG,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,QAAQ,CAAC,CAAC,CAAC;;EAExC,IAAI;IACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;MACtEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ;IAC/B,CAAC,CAAC;IAEF,MAAMU,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCV,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEQ,IAAI,CAAC;IAEnC,IAAI,CAACP,QAAQ,CAACS,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,KAAK,IAAI,sBAAsB,CAAC;IACvD;IAEAf,KAAK,CAAC,4BAA4B,CAAC;;IAEnC;IACAgB,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EAEjC,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdb,OAAO,CAACa,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACI,OAAO,CAAC;IACtCnB,KAAK,CAAC,YAAYe,KAAK,CAACI,OAAO,EAAE,CAAC;EACpC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}